## Oct 25, 2021 

# We will use Texas Airbnb data we used before for the exercise (see under “Data”) 
# Sample code that we will use as a basis is under “R code” 
# We will first explore appropriate spatial regression model 
# Then we will consider a few covariance models 
# We will use least squares method and likelihood based method to fit mean and covariance parameters 
# We will then perform Kriging on locations that we set aside 
# In the end, we can perform model comparison in terms of model fit as well as Kriging 
# We can also create Kriged map with associated uncertainty map 


library(readxl)
Airbnb_Texas_Rentals <- read_excel("Airbnb_Texas_Rentals.xlsx")

airbnb = Airbnb_Texas_Rentals 
airbnb=airbnb[!is.na(airbnb$longitude) & !is.na(airbnb$latitude),] 

log_price=log(airbnb$average_rate_per_night) 

data=airbnb[airbnb$Year==2017,] 
data=data[!is.na(data$bedrooms_count),] 
names(data)
#bedroom count, month, ...covaretae variables 

library("fields") 

#sample 500 rows 
index1=sample(1:dim(data)[1], 500) 
# 100 locations to do the kriging for prediction 
index2=sample(setdiff(1:dim(data)[1],index1), 100) 

data1=data[index1,] 
data2=data[index2,] 

# is data normaliy distributed? --> no its not
hist(data1$average_rate_per_night)
#------  to fit this, take the log, will be on the log scale
#   make sure to transform the data back taking the expo to have origianl scale ofdata
hist(log(data1$average_rate_per_night))
# better 


#variables to use for covariates variables ??
plot(data1$Month, log(data1$average_rate_per_night)) 
plot(data1$bedrooms_count, log(data1$average_rate_per_night))  
plot(data1$longitude, log(data1$average_rate_per_night)) 
plot(data1$latitude, log(data1$average_rate_per_night)) 


fit0 = lm(log(data1$average_rate_per_night)~data1$bedrooms_count)
res0 = fit0$residuals
quilt.plot(data1$longitude,data1$latitude, res0)


vario0 = variog(coords = cbind(data1$longitude, data1$latitude),)

library("geoR")  # euclidean distance using degrees 
#---------------------universial kriging 

## variogram  
vario1=variog(coords=cbind(data1$longitude, data1$latitude), 
              data=log(data1$average_rate_per_night)) 
plot(vario1) 
vario2=variog(coords=cbind(data1$longitude, data1$latitude),
              data=log(data1$average_rate_per_night), 
              trend=trend.spatial(~data1$bedrooms_count), 
              max.dist=6) 
plot(vario2) 



## least squares 
set.seed(1)
fit.expo=variofit(vario2, ini.cov.pars=c(1,1)) ## try many other models 
fit.expo

fit.shp=variofit(vario2, ini.cov.pars=c(1,1),
                 cov.model = "sph") ## try many other models 
fit.shp
# expo is better since it have smaller min weighted sum of squares 

## likelihood method 
fit2=likfit(coords=cbind(data1$longitude, data1$latitude), 
            data=log(data1$average_rate_per_night), 
            trend=trend.spatial(~data1$bedrooms_count),
            ini.cov.pars=c(0.5,2),
            fix.nugget=TRUE,
            nugget=0.1)  

fit3=likfit(coords=cbind(data1$longitude,data1$latitude), 
            data=log(data1$average_rate_per_night), 
            trend=trend.spatial(~data1$bedrooms_count),
            cov.model="spherical", 
            ini.cov.pars=c(0.5,2),
            fix.nugget=TRUE,
            nugget=0.1) 

# expo is better with a larger max log-likelihood 
# reml is also better since is it unbiased for mle estimates 

## Kriging 

# modify code below  
M=cbind(rep(1,500),  data1$bedrooms_count) 
m=t(cbind(rep(1,100), data2$bedrooms_count)) 

#reml results with expodential cov fun
alpha = 0.1744
beta = 0.6234
delta = 0.4333
D = rdist(cbind(data1$longitude,data1$latitude))
  S = alpha * exp(-D/beta)
diag(S) = diag(S)+delta
d = rdist(cbind(data1$longitude, data1$latitude), cbind(data2$longitude, data2$latitude))
  
lambda=(solve(S) - solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% t(M) %*% solve(S) ) %*% k + solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% m 

krig.expo.reml=t(lambda) %*% log(data1$average_rate_per_night) 


g= m-t(M) %*% solve(S) %*% k 
mse3=k0-t(k) %*% solve(S) %*% k + t(g) %*% solve(t(M) %*% solve(S) %*% M) %*% g 
mse3=diag(mse3) 


## Krigged map with fields package 
# 
fit=Krig(cbind(data1$longitude, data1$latitude), log(data1$average_rate_per_night),m=1, Z=data1$bedrooms_count) 
surface(fit) 
out.p1=predict(fit, cbind(data2$longitude, data2$latitude),Z=data2$bedrooms_count) 
out.p2=predictSE(fit, cbind(data2$longitude, data2$latitude),Z=data2$bedrooms_count) 
quilt.plot(cbind(data2$longitude, data2$latitude), out.p1) 
quilt.plot(cbind(data2$longitude, data2$latitude), out.p2) 

data.all=data[setdiff(1:dim(data)[1], index1),] 
out.p3=predict(fit, cbind(data.all$longitude, data.all$latitude),Z=data.all$bedrooms_count) 
out.p4=predictSE(fit, cbind(data.all$longitude, data.all$latitude),Z=data.all$bedrooms_count) 
quilt.plot(cbind(data.all$longitude, data.all$latitude), out.p3-log(data.all$average_rate_per_night)) 














