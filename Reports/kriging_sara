library(readxl)
load('C:/Users/nsara/Documents/Grad_School/MATH 6397/report/data1.RData')
dim(data1)
library(geoR)

#---------------------- Data Cleaning ------------------------------------------

general_data = data1 #Create a dataframe with the loaded dataset
nrow(general_data) #Check the number of rows of the dataset
sum(is.na(general_data)) # have about 20 rows with at least one missing value
colSums(is.na(general_data))  # check to see what columns have the missing values 

new_data <- na.omit(general_data) #create a new dataset without missing values
nrow(new_data) #check number of rows of new dataset without missing values
sum(is.na(new_data)) #check to see if all missing values have been removed

set.seed(222)
# 1500 sample data
sample_data = new_data[sample(1:dim(new_data)[1],1500), ] #create a sample dataset of 1500 rows
nrow(sample_data)#check to see if sample dataset has 1500 rows
# 100 kriging data 
sample_kriging_data = new_data[sample(setdiff(1:dim(new_data)[1], sample_data),100),] # 100 location for kriging
nrow(sample_kriging_data)


##---------- Kriging  --------------------------------------------------------- 
# 1500 selected data
x1     <- sample_data$total_bedrooms 
x2     <- sample_data$median_income  
x3     <- sample_data$housing_median_age 
x4     <- sample_data$longitude
x5     <- sample_data$latitude

#residual of our selected data
y      <- log(sample_data$median_house_value) #value at loc
res0 <- (lm(log(median_house_value) ~ total_bedrooms+ 
              median_income+housing_median_age + 
              longitude+latitude,  data = sample_data))$residuals

# 100 kirging data
k1     <- sample_kriging_data$total_bedrooms
k2     <- sample_kriging_data$median_income  
k3     <- sample_kriging_data$housing_median_age 
k4     <- sample_kriging_data$longitude
k5     <- sample_kriging_data$latitude

# residual of the kriging
res_krig <- (lm(log(median_house_value) ~ total_bedrooms+ 
                  median_income+housing_median_age + 
                  longitude+latitude,  data = sample_kriging_data))$residuals
res_krig = matrix(res_krig, ncol = 1)

hist(res)
# locations for selected data and kriging data
locc = cbind(sample_data$longitude, sample_data$latitude)
locc_k = cbind(sample_kriging_data$longitude, sample_kriging_data$latitude)

# distance
D <- rdist(locc)                  # distance b/t the selected data
d <- rdist(locc,  locc_k)         # distance b/t selected data and kriging data


# modify code below  
M = cbind(rep(1, dim(D)[1]), x1,x2,x3,x4,x5) 
m = t(cbind(rep(1,100), k1,k2,k3,k4,k5)) 

Z = matrix(res0, ncol = 1)       # data vector

# -------------------------(my results)
######## exponential OLS
alpha = 0.0594
beta  = 0.0210
delta = 0.0474

S = alpha * exp(-D/beta)         # covariance matrix 
diag(S) = diag(S)+delta          # add nugget 
k = alpha*exp(-d/beta)
lambda = (solve(S) - solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% t(M) %*% solve(S) ) %*% k + solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% m 
dim(lambda)

krig.exp.ols = t(lambda) %*% Z 
dim(krig.exp.ols)




plot(res_krig, krig.exp.ols)
lines(res_krig,res_krig) #y=x line 

mse1=mean((krig.exp.ols-res_krig)^2)
mse1 #in log form
mae1=mean(abs(krig.exp.ols-res_krig))
mae1


###### expodental WLS

alpha = 0.0746
beta  = 0.0188 
delta = 0.0332

S = alpha * exp(-D/beta)         # covariance matrix 
diag(S) = diag(S)+delta          # add nugget 
k = alpha*exp(-d/beta)

lambda2 = (solve(S) - solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% t(M) %*% solve(S) ) %*% k + solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% m 
dim(lambda2)

krig.exp.wls = t(lambda2) %*% Z 
dim(krig.exp.wls)


plot(res_krig, krig.exp.wls)
lines(res_krig,res_krig) #y=x line 

mse2=mean((krig.exp.wls-res_krig)^2)
mse2
mae2=mean(abs(krig.exp.wls-res_krig))
mae2




#########exponential REML
alpha =  0.1026
beta  =  0.0796
delta =  0.0312

S= alpha *exp(-D/beta)
diag(S)=diag(S)+delta
k=alpha*exp(-d/beta)


lambda3=(solve(S) - solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% t(M) %*% solve(S) ) %*% k + solve(S) %*% M %*% solve(t(M) %*% solve(S) %*% M) %*% m 
krig.exp.reml=t(lambda3) %*% Z


plot(res_krig,krig.exp.reml)
lines(res_krig,res_krig) #y=x line 

mse3=mean((krig.exp.reml-res_krig)^2)
mse3
mae3=mean(abs(krig.exp.reml-res_krig))
mae3




#########spherical ols
alpha  = 0.0587
beta   = 0.0520
delta  = 0.0480

S = alpha*(1-((3*D)/(2*beta))+((D^3)/(2*(beta^3))))
diag(S)=diag(S)+delta
k=alpha*exp(-d/beta)


T = 0
lambda4=(solve(S, tol = T) - solve(S, tol =T) %*% M %*% solve(t(M) %*% solve(S, tol =T) %*% M,tol = T) %*% t(M) %*% solve(S,tol = T) ) %*% k + solve(S,tol = T) %*% M %*% solve(t(M) %*% solve(S,tol =T) %*% M,tol =T) %*% m 
krig.sph.ols=t(lambda4) %*% Z

plot(res_krig,krig.sph.ols)
lines(res_krig,res_krig) #y=x line 

mse4=mean((krig.sph.ols-res_krig)^2)
mse4
mae4=mean(abs(krig.sph.ols-res_krig))
mae4




#########spherical wls
alpha  = 0.0596
beta   = 0.0531
delta  = 0.0481

S = alpha*(1-((3*D)/(2*beta))+((D**3)/(2*(beta**3))))
diag(S)=diag(S)+delta
k=alpha*exp(-d/beta)


T = 0
lambda5=(solve(S, tol = T) - solve(S, tol =T) %*% M %*% solve(t(M) %*% solve(S, tol =T) %*% M,tol = T) %*% t(M) %*% solve(S,tol = T) ) %*% k + solve(S,tol = T) %*% M %*% solve(t(M) %*% solve(S,tol =T) %*% M,tol =T) %*% m 
krig.sph.wls=t(lambda5) %*% Z

plot(res_krig,krig.sph.wls)
lines(res_krig, res_krig)

mse5=mean((krig.sph.wls-res_krig)^2)
mse5
mae5=mean(abs(krig.sph.wls-res_krig))
mae5



#########spherical reml
alpha  = 0.1005
beta   = 0.1321
delta  = 0.0318

S = alpha*(1-((3*D)/(2*beta))+((D**3)/(2*(beta**3))))
diag(S)=diag(S)+delta
k=alpha*exp(-d/beta)


T = 0
lambda6=(solve(S, tol = T) - solve(S, tol =T) %*% M %*% solve(t(M) %*% solve(S, tol =T) %*% M,tol = T) %*% t(M) %*% solve(S,tol = T) ) %*% k + solve(S,tol = T) %*% M %*% solve(t(M) %*% solve(S,tol =T) %*% M,tol =T) %*% m 
krig.sph.reml=t(lambda6) %*% Z

plot(res_krig,krig.sph.reml)
lines(res_krig,res_krig) #y=x line 

mse6=mean((krig.sph.reml-res_krig)^2)
mse6
mae6=mean(abs(krig.sph.reml-res_krig))
mae6





print(cbind(mse1,mse2,mse3, mse4,mse5,mse6))

print(cbind(mae1,mae2,mae3, mae4,mae5,mae6))


> print(cbind(mse1,mse2,mse3, mse4,mse5,mse6))
           mse1       mse2      mse3      mse4      mse5      mse6
[1,] 0.03133114 0.03249463 0.0293692 0.9651526 0.9450098 0.3779434
> 
> print(cbind(mae1,mae2,mae3, mae4,mae5,mae6))
          mae1      mae2      mae3      mae4      mae5      mae6
[1,] 0.1226097 0.1215171 0.1176233 0.7574255 0.7502619 0.5013609
